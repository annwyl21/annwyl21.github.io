{
	"yahtzeeScorerProject": {
		"projectName": "Yahtzee Scorer",
		"info": "<p>Initially designed to contain the logic to score an individual dice roll during a game and return an object with the score possibilities, this scorer also now allows a user to play the game against the computer, tracking the score in a scoreboard object.</p><p>This project demonstrates my understanding of object-oriented programming, ability to code the scoring logic required for yahtzee and the commit history in github will show that I built this project using Test Driven Development - writing the tests before writing the code. and to run a command line gameThis game project demonstrates how I used GitHub workflows, initiating automatic unit tests to continuously ensure the quality of my code.</p><p>I used pytest and Pexpect for unit testing, the debugger tool to identify errors swiftly and a GitHub project board to efficiently manage tasks, breaking objectives into manageable, deliverable chunks, keeping the project on track and my goals clear.</p>",
		"detail": "This was a big project and I enjoyed the opportunity to dive into TDD and get to grips with the debugger tool.",
		"image": "./images/tdd_yahtzee_small.png",
		"alt": "Screenshot of Test Driven Development for my Yahtzee Score Calculator",
		"skills": ["Pytest", "Pexpect", "Python", "Github Workflow", "Github Projects"],
		"badges": ["TDD", "OOP", "Github"],
		"github": "https://github.com/annwyl21/yahtzee",
		"primaryLink": "https://github.com/annwyl21/yahtzee"
	},

	"brewqueue": {
		"projectName": "BrewQueue",
		"info": "<p>An order management system (to-do list) to manage barrista workflow.</p><p>Created using JavaScript, I successfully debugged critical issues, including an off-by-1 error and unpredictable card creation anomolies, using browser debugging tools to pinpoint a variable declaration oversight that JavaScript gracefully handled without explicit error, a contrast to typical Python behaviour.</p>",
		"detail": "This was my Bootcamp project, initially designed using Lucid Chart and created on completion of the JavaScript DOM module.",
		"image": "./images/BrewQueueSmall.jpg",
		"alt": "Built to my design in LucidChart",
		"skills": ["JavaScript", "local storage", "LucidChart", "CSS", "HTML"],
		"badges": ["JavaScript"],
		"github": "https://github.com/annwyl21/",
		"primaryLink": "./Fulfillment/index.html"
	},

	"heathrowHeatmaps": {
		"projectName": "Visualising Heathrow Weather",
		"info": "<p>A series of heatmaps to visualise weather data recorded at Heathrow over the last 70 years.</p><p>I downloaded freely available data from the MET office into pandas in order to create heatmaps using Matplotlib, NumPy & Seaborn libraries.</p><p>See more heatmaps on my project page.</p>",
		"detail": "placeholder",
		"image": "./images/heathrow_rainfall_heatmap_decade_small.jpg",
		"alt": "Heatmap displaying a decade of rainfall (total rainfall in mm)",
		"imagesArray": ["./images/heathrow_rainfall_heatmap_decade_small.jpg", "./images/heathrow_min_temp_heatmap_small.jpg", "./images/heathrow_heatmap_1950_2020_small.jpg"],
		"altArray": ["Heatmap displaying a decade of rainfall (total rainfall in mm)", "Heatmap displaying 20yrs of weather data (mean daily min temp)", "Heatmap displaying 70yrs of weather data (mean daily max temp)"],
		"more-info": ["<p>A heatmap to show 10 years of weather data, displaying the total rainfall in mm at Heathrow Airport.</p>", "<p>A heatmap to show 20 years of weather data, displaying the mean daily min temperature at Heathrow Airport.</p>", "<p>A heatmap to show 70 years of weather data, displaying the mean daily max temperature at Heathrow Airport.</p>"],
		"skills": ["Data Visualisation", "Python", "Matplotlib", "Pandas", "API"],
		"badges": ["Python", "API", "Data Visualisation"],
		"github": "https://github.com/annwyl21/heatmap_weather",
		"primaryLink": "https://github.com/annwyl21/heatmap_weather"
	},

	"symptomLogger": {
		"projectName": "Symptom Tracker",
		"info": "<p>The <i>current</i> project utilizes a metaprompt prefix in API requests to the text-davinci-003 AI model, summarizing user-logged symptoms. These symptoms timestamped and stored in a Postgres database, can be summarized on demand. A bubbleplot illustrates the frequency of symptoms over time and throughout the day, with bubble size signifying reported pain levels.</p><p>To develop this application, I acquired knowledge in NLP and the NLTK, creating a preliminary summarizing tool to establish a benchmark for the API/metaprompt development. Finally, I adapted my knowledge of mysql to create and connect to a PostgreSQL database using a docker image.</p>",
		"detail": "placeholder",
		"image": "./images/bubbleplot_symptoms_small.png",
		"alt": "Bubble plot dynamically generated to display frequency of symptoms over time and when they occur throughout the day, with a reported pain scale represented by bubble size.",
		"skills": ["JavaScript DOM", "JavaScript node.js"],
		"badges": [],
		"github": "https://github.com/annwyl21/symptom_record",
		"primaryLink": "https://github.com/annwyl21/symptom_record"
	},

	"debtComparisonCalculator": {
		"projectName": "Debt Comparison Calculator",
		"info": "<p>Available on Dockerhub and as a serverless container app on Azure, my simple debt comparison calculator creates 3 debt objects and calculates how long it will take to repay 3 debts, comparing 3 specific repayment methods; stack, snowball & avalanche.</p>",
		"detail": "placeholder",
		"image": "./placeholder.jpg",
		"alt": "placeholder text",
		"skills": ["JavaScript DOM", "JavaScript node.js"],
		"badges": [],
		"github": "https://github.com/annwyl21/debt_comparison",
		"docker": "https://hub.docker.com/r/annwyl21/debt_comparison",
		"azure": "http://debt-comparison.wittyflower-04a4021a.westus2.azurecontainerapps.io",
		"primaryLink": "http://debt-comparison.wittyflower-04a4021a.westus2.azurecontainerapps.io"
	},

	"rps": {
		"projectName": "Rock, Paper Scissors",
		"info": "<p>Logic for the traditional Rock, Paper, Scissors Game behind my JavaScript front-end.</p>",
		"detail": "placeholder",
		"image": "./RockPaperScissors/Assignment_5_Ellen_2of3.html",
		"alt": "Rock, Paper, Scissors",
		"skills": ["JavaScript DOM", "JavaScript node.js"],
		"badges": [],
		"github": "https://github.com/annwyl21",
		"primaryLink": "./local_Link.html"
	},

	"weatherApi": {
		"projectName": "Weather API",
		"info": "<p>This project connects to a MET office API, a weather object is created with the retrieved weather forecast data which is then used to display customised information in the app.</p>",
		"detail": "placeholder",
		"image": "./images/weather_forecast_results_small.jpg",
		"alt": "Weather Forecast Results",
		"skills": ["placeholder"],
		"badges": [],
		"github": "https://github.com/annwyl21/weather_forecast",
		"primaryLink": "https://github.com/annwyl21/weather_forecast"
	},

	"sentenceTranslation": {
		"projectName": "Sentence Translation",
		"info": "<p>This project takes user input, connects to the Azure Cognitive API to identify the language of the input and translate into 5 given languages; spanish, dutch, french, german & english.</p>",
		"detail": "placeholder",
		"image": "./placeholder.jpg",
		"alt": "placeholder text",
		"skills": ["placeholder"],
		"badges": [],
		"github": "https://github.com/annwyl21/sentence_translation",
		"primaryLink": "https://github.com/annwyl21/sentence_translation"
	}

}